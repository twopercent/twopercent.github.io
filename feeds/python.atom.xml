<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>twopercent</title><link href="http://twopercent.github.io/" rel="alternate"></link><link href="http://twopercent.github.io/feeds/python.atom.xml" rel="self"></link><id>http://twopercent.github.io/</id><updated>2015-09-22T16:26:00-05:00</updated><entry><title>Metro Transit CLI</title><link href="http://twopercent.github.io/metro-transit-cli.html" rel="alternate"></link><updated>2015-09-22T16:26:00-05:00</updated><author><name>Chris Moser</name></author><id>tag:twopercent.github.io,2015-09-22:metro-transit-cli.html</id><summary type="html">
        &lt;a href="http://www.metrotransit.org"&gt;Metro Transit&lt;/a&gt; is the main transit operator in the twin cities. 
        They have a fine website but a little too much clicking is required to find out when the next bus is going to roll by. 
        I found the &lt;a href="http://svc.metrotransit.org" /&gt;Metro Transit web services&lt;/a&gt; page to be just what I needed. 
        &lt;br&gt;&lt;br&gt;
        I wrote three functions to request the applicable directions of a specific route, the time stops on a route, and the next arrivals at a time stop. 
        There is also some logic to present the user with the results of each query and enter input to craft the next request. 
        I used &lt;code&gt;urllib.request&lt;/code&gt; and &lt;code&gt;xml.etree.ElementTree&lt;/code&gt; from the python 3.4 standard library. 
        &lt;br&gt;&lt;br&gt;
        First the user is prompted for a route number and a call is made to the API to return the directions, either North - South or East - West, of that route. 
        The data is returned in XML format as an array of text value pairs, the direction and a direcion code.
        ElementTree is used to parse them. 
        I load the data into a list of lists so that I can display the options with a &lt;code&gt;0.&lt;/code&gt; and &lt;code&gt;1.&lt;/code&gt; identifier. 
        The users input is used to select the index of the parent list, taking the first index of the child list, which is the direction code. 
        &lt;br&gt;&lt;br&gt;
        The direction code is used alond with the bus number to craft the next API call.  
        An array of pairs is again returned. 
        Time stops and a four character stop code are returned in order of the direction that was specified. 
        A list of lists is again created and the users is promtped for a seletion. 
        &lt;br&gt;&lt;br&gt;
        The final call combines the route number, the direction of travel and the time stop location. 
        A collection of "NexTripDeparture" are returned which contain information about the next vehicles scheduled to stop at the requested location. 
        I print the arrival time, bus number, route description, and a "BlockNumber" designator for the vehicle. (maybe a bus number) 
        &lt;br&gt;&lt;br&gt;
        The code is on &lt;a href="https://github.com/twopercent/mtcli"&gt;GitHub&lt;/a&gt;.  
        &lt;br&gt;&lt;br&gt;
        Use git clone to clone is locally: 
        &lt;br&gt;
        &lt;code&gt;git clone https://github.com/twopercent/mtcli&lt;/code&gt;
        &lt;br&gt;&lt;br&gt;
        Some more work can be done to pull out the XML parsing from the API call functions as it is very simiar in all three. 
    </summary><category term="python"></category><category term="REST"></category><category term="dev"></category></entry></feed>